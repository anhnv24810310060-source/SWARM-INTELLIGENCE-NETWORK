---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: federation
  namespace: swarm-system
  labels:
    app: federation
    version: v1
spec:
  serviceName: federation-headless
  replicas: 3
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: federation
  template:
    metadata:
      labels:
        app: federation
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: federation
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        fsGroup: 65532
      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - federation
            topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - federation
              topologyKey: topology.kubernetes.io/zone
      
      containers:
      - name: federation
        image: ghcr.io/swarmguard/federation:latest
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://tempo:4317"
        
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        volumeMounts:
        - name: data
          mountPath: /data
        - name: tmp
          mountPath: /tmp
      
      volumes:
      - name: tmp
        emptyDir: {}
  
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ssd
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: federation
  namespace: swarm-system
  labels:
    app: federation
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: grpc
    protocol: TCP
    name: grpc
  selector:
    app: federation
---
apiVersion: v1
kind: Service
metadata:
  name: federation-headless
  namespace: swarm-system
  labels:
    app: federation
spec:
  clusterIP: None
  ports:
  - port: 8080
    name: http
  - port: 9090
    name: grpc
  selector:
    app: federation
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: federation
  namespace: swarm-system
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: federation-pdb
  namespace: swarm-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: federation

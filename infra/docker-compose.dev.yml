version: "3.9"
services:
  nats:
    image: nats:2.10
    command: ["-js"]
    ports: ["4222:4222", "8222:8222"]
  jetstream-provision:
    image: alpine:3.20
    depends_on:
      - nats
    volumes:
      - ../scripts/provision_jetstream.sh:/provision_jetstream.sh:ro
    entrypoint: ["/bin/sh","-c","apk add --no-cache curl ca-certificates >/dev/null 2>&1; wget -q -O /usr/local/bin/nats https://github.com/nats-io/natscli/releases/download/v0.1.5/nats-0.1.5-linux-amd64; chmod +x /usr/local/bin/nats; sleep 2; NATS_URL=nats://nats:4222 /provision_jetstream.sh || true"]
    restart: "no"
  minio:
    image: minio/minio:RELEASE.2024-09-01T00-00-00Z
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: ["server", "/data"]
    ports: ["9000:9000"]
  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: devpass
      POSTGRES_USER: dev
      POSTGRES_DB: swarm
    ports: ["5432:5432"]
  otel-collector:
    image: otel/opentelemetry-collector:0.102.0
    command: ["--config=/etc/otel-config.yaml"]
    volumes:
      - ./otel-config.yaml:/etc/otel-config.yaml:ro
    ports: ["4317:4317", "4318:4318"]
  prometheus:
    image: prom/prometheus:v2.53.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alert-rules.yml:/etc/prometheus/alert-rules.yml:ro
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  
  alertmanager:
    image: prom/alertmanager:v0.27.0
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - "9093:9093"
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-https://hooks.slack.com/services/YOUR/WEBHOOK/URL}
      - PAGERDUTY_SERVICE_KEY=${PAGERDUTY_SERVICE_KEY:-your-pagerduty-key}
  
  grafana:
    image: grafana/grafana:11.0.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=devpass
    depends_on:
      - prometheus
      - loki
    volumes:
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
  loki:
    image: grafana/loki:3.0.0
    command: ["-config.file=/etc/loki/config.yml"]
    volumes:
      - ./loki-config.yml:/etc/loki/config.yml:ro
    ports:
      - "3100:3100"
  tempo:
    image: grafana/tempo:2.5.0
    command: ["-config.file=/etc/tempo/config.yml"]
    volumes:
      - ./tempo-config.yml:/etc/tempo/config.yml:ro
    ports:
      - "3200:3200"
    depends_on:
      - loki
  promtail:
    image: grafana/promtail:3.0.0
    command: ["-config.file=/etc/promtail/config.yml"]
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - loki
